# Generated by Django 2.1.2 on 2018-12-29 19:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateTimeField()),
                ('date_of_birth', models.DateTimeField()),
                ('source_of_referral', models.IntegerField(choices=[(1, '14(c) Certificate Holders'), (2, 'Adult Education and Literacy Programs'), (3, 'American Indian VR Services Program'), (4, 'Centers for Independent Living'), (5, 'Child Protective Services'), (6, 'Community Rehabilitation Programs'), (7, 'Consumer Organizations or Advocacy Groups'), (8, 'Department of Labor Employment and Training Service Programs for Adults, Dislocated Workers, and Youth'), (9, 'Educational Institutions (Elementary/Secondary)'), (10, 'Educational Institutions (Postsecondary)'), (11, 'Employers'), (11, 'Extended Employment Providers'), (13, 'Faith Based Organizations'), (14, 'Family/Friends'), (15, 'Intellectual and Developmental Disabilities Providers'), (16, 'Medical Health Provider (Public or Private)'), (17, 'Mental Health Provider (Public or Private)'), (18, 'Public Housing Authority'), (19, 'Self-referral'), (20, 'Social Security Administration (Disability Determination Service or District office)'), (21, 'State Department of Correction/Juvenile Justice'), (22, 'Temporary Assistance for Needy Families (TANF)'), (23, "Veteran's Benefits Administration (which includes VA Vocational Rehabilitation)"), (24, "Veteran's Health Administration (the VA hospital system, as well as the VA transitional living, transitional employment, and compensated work therapy programs)"), (25, 'Wagner-Peyser Employment Service Program'), (26, 'Welfare Agency (State or local government)'), (27, "Worker's Compensation"), (28, 'Other One-stop Partner'), (29, 'Other Sources'), (30, 'Other State Agencies'), (31, 'Other VR State Agencies'), (32, 'Other WIOA-funded Programs including Job Corps, YouthBuild, Indian and Native Americans, and Migrant and Seasonal Farm-worker Programs')])),
                ('student_status', models.IntegerField(choices=[(1, 'Individual is a student with a disability and has a section 504 accommodation.'), (2, 'Individual is a student with adisability and is receiving transition services under an Individualized Education Program (IEP).'), (3, 'Individual is a student with a disability who does not have a section 504 accommodation and is not receiving services under an IEP.'), (0, 'Individual is not a student with a disability.')])),
            ],
        ),
        migrations.CreateModel(
            name='BarriersToEmployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('long_term_unemployed', models.BooleanField()),
                ('exhausting_TANF', models.IntegerField(choices=[(1, 'Individual is within two years of exhausting lifetime eligibility under part A of Title IV of the Social Security Act (42 U.S.C. 601 et seq.)'), (0, 'Individual does not meet the condition described above. '), (9, 'Individual has never received TANF or the individual has already exhausted lifetime TANF eligibility')])),
                ('foster_care_youth', models.BooleanField()),
                ('homeless_individual_children', models.BooleanField()),
                ('ex_offender', models.IntegerField(choices=[(1, 'Individual meets the definition of an ex-offender.'), (0, 'Individual does not meet the definition of ex-offender.'), (9, 'Individual did not self-identify')])),
                ('low_income', models.BooleanField()),
                ('english_language_learner', models.BooleanField()),
                ('basic_skills_deficient', models.BooleanField()),
                ('cultural_barriers', models.IntegerField(choices=[(1, 'Individual perceives himself or herself as possessing attitudes, beliefs, customs or practices that influence a way of thinking, acting or working that may serve as a hindrance to employment.'), (0, 'Individual does not perceive himself or herself as possessing attitudes, beliefs, customs or practices that influence a way of thinking, acting or working that may serve as a hindrance to employment.'), (9, 'Individual did not self-identify.')])),
                ('single_parent', models.IntegerField(choices=[(1, ''), (0, ''), (9, '')])),
                ('displaced_homemaker', models.BooleanField()),
                ('migrant_seasonal_farmworker', models.IntegerField(choices=[(1, 'Individual is a low-income individual who for 12 consecutive months out of the 24 months prior to application for the program involved, has been primarily employed in agriculture or fish farming labor that is characterized by chronic unemployment or underemployment'), (2, 'Individual is a seasonal farmworker whose agricultural labor requires travel to a job site such that the farmworker is unable to return to a permanent place of residence within the same day.'), (3, 'Individual is a dependent (as defined in 20 CFR 685.110) of the individual described as a seasonal or migrant seasonal farmworker above.'), (0, 'Individual does not meet any of the migrant or seasonal farmworker conditions listed above.')])),
            ],
        ),
        migrations.CreateModel(
            name='CareerServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_disability', models.IntegerField(choices=[(1, 'Individual indicates that he/she has any "disability”, as defined in section 3(2)(a) of the Americans with Disabilities Act of 1990 (42 U.S.C. 12102).Under that definition, a "disability" is a physical or mental impairment that substantially limits one or more of the person\'s major life activities.'), (0, 'Individual indicates that he/she does not have a disability that meets the definition'), (9, 'Individual did not self-identify')])),
                ('significance', models.IntegerField(choices=[(1, 'Individual has a significant disability'), (2, 'Individual is most significantly disabled'), (0, 'Individual has no significant disability')])),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition_students_with_disabilities', models.CharField(max_length=5)),
                ('school_status', models.IntegerField(choices=[(1, 'Individual has not received a secondary school diploma or its recognized equivalent and is attending any elementary or secondary school (including elementary, intermediate, junior high school, whether full or part-time)'), (2, 'Individual has not received a secondary school diploma or its recognized equivalent and is attending an alternative secondary school or an alternative course of study approved by the local educational agency whether full or part-time.'), (3, 'Individual has received a secondary school diploma or its recognized equivalent and is attending a postsecondary school or program (whether full or part-time), or is between school terms and is enrolled to return to school.'), (4, 'Individual is not within the age of compulsory school attendance; and is no longer attending any school and has not received a secondary school diploma or its recognized equivalent.'), (5, 'Individual is not attending any school and has either a secondary school diploma or has attained a secondary school equivalency.'), (6, 'Individual is within the age of compulsory school attendance, but has not attended school for at least the most recent complete school year calendar quarter and has not received a secondary school diploma or its recognized equivalent.')])),
                ('highest_educational_level', models.IntegerField(choices=[(1, 'Individual attained a secondary school diploma.'), (2, 'Individual attained a secondary school equivalency.'), (3, 'Individual has a disability and attained a certificate of attendance/completion as a result of successfully completing an Individualized Education Program (IEP).'), (4, 'Individual completed one or more years of postsecondary education.'), (5, 'Individual attained a postsecondary certification, license, or educational certificate (non-degree).'), (6, 'Individual attained an Associate’s Degree'), (7, 'Individual attained a Bachelor’s Degree.'), (8, 'ndividual attained a degree beyond a Bachelor’s Degree.'), (9, 'No educational level was completed.')])),
                ('elementary_or_secondary_grade_completed', models.IntegerField()),
                ('enrolled_in_secondary_education', models.BooleanField()),
                ('date_received_certificate_of_completion', models.DateField(blank=True, null=True)),
                ('enrolled_in_state_adult_secondary', models.BooleanField()),
                ('attained_secondary_diploma', models.BooleanField()),
                ('date_attained_ged', models.DateField(blank=True, null=True)),
                ('highest_post_secondary_year', models.IntegerField(choices=[(1, 'Highest level of postsecondary education the individual is enrolled in is the first academic year (Freshman).'), (2, 'Highest level of postsecondary education the individual is enrolled in is the second academic year (Sophomore)'), (3, 'Highest level of postsecondary education the individual is enrolled in is the third academic year (Junior).'), (4, 'Highest level of postsecondary education the individual is enrolled in is the fourth academic year (Senior)'), (0, 'Individual is not enrolled in postsecondary education.')])),
                ('enrolled_in_post_secondary', models.BooleanField()),
                ('date_enrolled_education_or_training_program', models.DateField(blank=True, null=True)),
                ('some_postsecondary', models.BooleanField()),
                ('date_associate_degree', models.DateField(null=True)),
                ('date_bachelors_degree', models.DateField(null=True)),
                ('date_masters_degree', models.DateField(null=True)),
                ('date_graduate_degree', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Eligibility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('has_extension', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome', models.IntegerField(choices=[(1, 'Competitive Integrated Employment'), (2, 'Self-Employment'), (3, 'Business Enterprise Program (BEP)'), (4, 'Supported Employment in Competitive Integrated Employment'), (5, 'Supported Employment on Short-term Basis'), (6, 'Uncompensated Employment'), (7, 'Termination Notice, WARN,or Transitioning Service Member')])),
                ('primary_occupation_outcome', models.CharField(max_length=6)),
                ('start_date_employment', models.DateField()),
                ('hourly_wage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('hours_worked_per_week', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Exit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('exit_type', models.IntegerField(choices=[(1, 'Individual exited during or after a trial work experience.'), (2, 'Individual exited after eligibility, but from an order of selection waiting list.'), (3, 'Individual exited after eligibility, but prior to a signed IPE.'), (4, 'Individual exited after an IPE without an employment outcome.'), (5, 'Individual exited after an IPE in noncompetitive and/or nonintegrated employment.'), (6, 'Individual exited after an IPE in competitive and integrated employment or supported employment.'), (0, 'Individual exited as an applicant, prior to eligibility determination or trial work.')])),
                ('reason', models.IntegerField(choices=[(1, 'Institutionalized'), (2, 'Health/Medical'), (3, 'Death of Individual'), (4, 'Reserve Forces Called to Active Duty'), (5, 'Foster Care'), (6, 'Ineligible'), (7, 'Criminal Offender'), (8, 'No Disabling Condition'), (9, 'No Impediment to Employment'), (10, 'Does Not Require VR Service'), (11, 'Disability Too Significant to Benefit from Services'), (12, 'No Long Term Source of Extended Services Available'), (13, 'Transferred to Another Agency'), (14, 'Achieved Competitive Integrated Employment Outcome'), (15, 'Extended Employment'), (16, 'Extended Services Not Available'), (17, 'Unable to Locate or Contact'), (18, 'No Longer Interested in Receiving Services or Further Services'), (19, 'Individual is No Longer Available for Services Due to Residence in an Institutional Setting Other Than a Prison or Jail'), (20, 'All Other Reasons')])),
                ('employment', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='open_vr_api.Employment')),
            ],
        ),
        migrations.CreateModel(
            name='IndividualCharacteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.IntegerField(choices=[(1, 'Male'), (2, 'Female'), (9, 'Individual did not identify')])),
                ('alaskan_native', models.IntegerField(choices=[(1, 'Is'), (0, 'Is not'), (9, 'Individual did not identify')])),
                ('asian', models.IntegerField(choices=[(1, 'Is'), (0, 'Is not'), (9, 'Individual did not identify')])),
                ('black', models.IntegerField(choices=[(1, 'Is'), (0, 'Is not'), (9, 'Individual did not identify')])),
                ('native_hawaiian', models.IntegerField(choices=[(1, 'Is'), (0, 'Is not'), (9, 'Individual did not identify')])),
                ('white', models.IntegerField(choices=[(1, 'Is'), (0, 'Is not'), (9, 'Individual did not identify')])),
                ('hispanic', models.IntegerField(choices=[(1, 'Is'), (0, 'Is not'), (9, 'Individual did not identify')])),
                ('veteran', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='IndividualizedPlanForEmployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_other_diploma', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IpeEmployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment', models.IntegerField(choices=[(1, 'Competitive Integrated Employment'), (2, 'Self-Employment'), (3, 'Business Enterprise Program (BEP)'), (4, 'Employed: State Agency-managed Business Enterprise Program (BEP)'), (5, 'Employed: Extended Employment'), (6, 'Employed: Meets One of the Following Criteria'), (7, 'Not Employed: Student in Secondary Education'), (8, 'Not Employed: All Other Students'), (9, 'Not Employed: Trainee, Intern or Volunteer'), (10, 'Not Employed: Other')])),
                ('primary_occupation', models.CharField(max_length=6)),
                ('hourly_wage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('hours_worked_per_week', models.IntegerField()),
                ('date_other_diploma', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(choices=[('AS', '(ZIPs 09xxx) for Armed Forces Europe which includes Canada, Middle East, and Africa'), ('AP', '(ZIPs 962xx 966xx) for Armed Forces Pacific'), ('AA', '(ZIPs 340xx) for Armed Forces (Central and South) Americas'), ('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'District of Columbia'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Marianas'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Peurto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('88', 'Mexico'), ('99', 'Canada'), ('XX', 'Other (Not Listed Above)')], max_length=2)),
                ('fips_code', models.CharField(max_length=5)),
                ('zip_code', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='MeasurableSkillGains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_educational_functional_level', models.DateField(null=True)),
                ('date_skill_gain_secondary', models.DateField(null=True)),
                ('date_postsecondary_transcript', models.DateField(null=True)),
                ('date_training_milestone', models.DateField(null=True)),
                ('date_skill_progression', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalInsuranceCoverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicaid_at_application', models.BooleanField()),
                ('medicare_at_application', models.BooleanField()),
                ('affordable_care_exchange', models.BooleanField()),
                ('public_insurance_from_other_source', models.BooleanField()),
                ('private_insurance_through_employer', models.BooleanField()),
                ('not_yet_eligible_for_private_insurance', models.BooleanField()),
                ('other_private_insurance', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='OrderOfSelection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_placement', models.DateField()),
                ('date_of_exit', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='OtherService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PostExit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled_education', models.DateField()),
                ('date_attainment_credential', models.DateField()),
                ('employment_related_training_second_quarter', models.BooleanField()),
                ('retention_after_fourth_quarter', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='PreemploymentTransitionServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryDisabilityCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_impairment', models.CharField(choices=[('0', 'No Impairment'), ('1', 'Blindness'), ('2', 'Other Visual Impairments'), ('3', 'Deafness, Primary Communication Visual'), ('4', 'Deafness, Primary Communication Auditory'), ('5', 'Hearing Loss, Primary Communication Visual'), ('6', 'Hearing Loss, Primary Communication Auditory'), ('7', "Other Hearing Impairments (Tinnitus, Meniere's Disease, hyperacusis, etc."), ('8', 'Deaf-Blindness'), ('9', 'Communicative Impairments (expressive/receptive)'), ('10', 'Mobility Othopedic/Neurological Impairments'), ('11', 'Manipulation/Dexterity Orthopedic/Neurological Impairments'), ('12', 'Respiratory Impairments'), ('13', 'Other Orthopedic Impairments (e.g., limited range of motion'), ('14', 'Respiratory Impairments'), ('15', 'General Physical Debilitation (e.g., fatigue, weakness, pain, etc.)'), ('16', 'Other Physical Impairments (not listed above)'), ('17', 'Cognitive Impairments (e.g., impairments involving learning, thinking, processing information and concentration)'), ('18', 'Psychosocial Impairments (e.g., interpersonal and behavioral impairments, difficulty coping)'), ('19', 'Other Mental Impairments')], max_length=2)),
                ('source_of_impairment', models.CharField(choices=[('0', 'Cause Unknown'), ('1', 'Accident/Injury (Other than TBI or SCI)'), ('2', 'Alcohol Abuse or Dependence'), ('3', 'Amputations'), ('4', 'Anxiety Disorders'), ('5', 'Arthritis and Rheumatism'), ('6', 'Asthma and Other Allergies'), ('7', 'Attention-Deficit Hyperactivity Disorder (ADHD)'), ('8', 'Autism'), ('9', 'Blood Disorders'), ('10', 'Cancer'), ('11', 'Cardiac and Other Conditions of the Circulatory System'), ('12', 'Cerebal Palsy'), ('13', 'Congental Condition or Birth Injury'), ('14', 'Cystic Fibrosis'), ('15', 'Depressive and Other Mood Disorders'), ('16', 'Diabetes Mellitus'), ('17', 'Digestive'), ('18', 'Drug Abuse or Dependence (other than alcohol)'), ('19', 'Eating Disorders (e.g., anorexia, bulimia, or complusive overeating)'), ('20', 'End-Stage Renal Disease and Other Genitourinary System Disorders'), ('21', 'Epilepsy'), ('22', 'HIV and AIDS'), ('23', 'Immune Deficiencies Excluding HIV/AIDS'), ('24', 'Mental Illness (not listed elsewhere)'), ('25', 'Mental Retardation'), ('26', 'Multiple Sclerosis'), ('27', 'Muscular Dystrophy'), ('28', "Parkinson's Disease and Other Neurological Disorders"), ('29', 'Personality Disorders'), ('30', 'Physical Disorders/Conditions (not listed elsewhere)'), ('31', 'Polio'), ('32', 'Respiratory Disorders Other than Cystic Fibrosis or Asthma'), ('33', 'Schizophrenia and Other Psychotic Disorders'), ('34', 'Specific Learning Disabilities'), ('35', 'Spinal Chord Injury (SCI)'), ('36', 'Stroke'), ('37', 'Traumatic Brain Injury (TBI)')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='QuarterlyReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment', models.IntegerField(choices=[(1, 'ndividual is in unsubsidized employment, not including Registered Apprenticeship, the military, or competitive integrated employment under VR.'), (2, 'Individual is in a Registered Apprenticeship.'), (3, 'Individual is in the military.'), (4, 'ndividual is in competitive integrated employment (VR only).'), (9, 'Individual has exited but employment information is not yet available.'), (0, 'Individual not employed in the first quarter after exit quarter.')])),
                ('type_employment_match', models.IntegerField(choices=[(1, 'Method used in determining individual’s employment status was UI wage data.'), (2, 'Method used in determining individual’s employment status was Federal employment records (e.g., OPM, USPS).'), (3, 'Method used in determining individual’s employment status was military employment records'), (4, 'Method used in determining individual’s employment status was non- UI wage verification.'), (5, 'Information not yet available.'), (0, 'Individual is not employed.')])),
                ('wages', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryDisabilityCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_impairment', models.CharField(choices=[('0', 'No Impairment'), ('1', 'Blindness'), ('2', 'Other Visual Impairments'), ('3', 'Deafness, Primary Communication Visual'), ('4', 'Deafness, Primary Communication Auditory'), ('5', 'Hearing Loss, Primary Communication Visual'), ('6', 'Hearing Loss, Primary Communication Auditory'), ('7', "Other Hearing Impairments (Tinnitus, Meniere's Disease, hyperacusis, etc."), ('8', 'Deaf-Blindness'), ('9', 'Communicative Impairments (expressive/receptive)'), ('10', 'Mobility Othopedic/Neurological Impairments'), ('11', 'Manipulation/Dexterity Orthopedic/Neurological Impairments'), ('12', 'Respiratory Impairments'), ('13', 'Other Orthopedic Impairments (e.g., limited range of motion'), ('14', 'Respiratory Impairments'), ('15', 'General Physical Debilitation (e.g., fatigue, weakness, pain, etc.)'), ('16', 'Other Physical Impairments (not listed above)'), ('17', 'Cognitive Impairments (e.g., impairments involving learning, thinking, processing information and concentration)'), ('18', 'Psychosocial Impairments (e.g., interpersonal and behavioral impairments, difficulty coping)'), ('19', 'Other Mental Impairments')], max_length=2)),
                ('source_of_impairment', models.CharField(choices=[('0', 'Cause Unknown'), ('1', 'Accident/Injury (Other than TBI or SCI)'), ('2', 'Alcohol Abuse or Dependence'), ('3', 'Amputations'), ('4', 'Anxiety Disorders'), ('5', 'Arthritis and Rheumatism'), ('6', 'Asthma and Other Allergies'), ('7', 'Attention-Deficit Hyperactivity Disorder (ADHD)'), ('8', 'Autism'), ('9', 'Blood Disorders'), ('10', 'Cancer'), ('11', 'Cardiac and Other Conditions of the Circulatory System'), ('12', 'Cerebal Palsy'), ('13', 'Congental Condition or Birth Injury'), ('14', 'Cystic Fibrosis'), ('15', 'Depressive and Other Mood Disorders'), ('16', 'Diabetes Mellitus'), ('17', 'Digestive'), ('18', 'Drug Abuse or Dependence (other than alcohol)'), ('19', 'Eating Disorders (e.g., anorexia, bulimia, or complusive overeating)'), ('20', 'End-Stage Renal Disease and Other Genitourinary System Disorders'), ('21', 'Epilepsy'), ('22', 'HIV and AIDS'), ('23', 'Immune Deficiencies Excluding HIV/AIDS'), ('24', 'Mental Illness (not listed elsewhere)'), ('25', 'Mental Retardation'), ('26', 'Multiple Sclerosis'), ('27', 'Muscular Dystrophy'), ('28', "Parkinson's Disease and Other Neurological Disorders"), ('29', 'Personality Disorders'), ('30', 'Physical Disorders/Conditions (not listed elsewhere)'), ('31', 'Polio'), ('32', 'Respiratory Disorders Other than Cystic Fibrosis or Asthma'), ('33', 'Schizophrenia and Other Psychotic Disorders'), ('34', 'Specific Learning Disabilities'), ('35', 'Spinal Chord Injury (SCI)'), ('36', 'Stroke'), ('37', 'Traumatic Brain Injury (TBI)')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provided_in_house', models.IntegerField(choices=[(1, 'service was provided in whole or part by VR agency staff (in-house)'), (2, 'service was provided in whole or part by VR agency staff (in-house) and is no longer being provided. '), (None, 'service was not provided by VR agency staff (in-house).')], null=True)),
                ('provided_through_VR_agency_choices', models.IntegerField(choices=[(1, 'service was provided in whole or part through purchase by the VR agency.'), (2, 'service was provided in whole or part through purchase by the VR agency and is no longer being provided.'), (None, 'service was not provided through purchase by VR agency.')], null=True)),
                ('purchased_service_provider', models.IntegerField(choices=[(1, 'Community Rehabilitation Programs (CRPs)'), (2, 'Private CRP'), (3, 'Public Service Provider'), (4, 'Other Private Service Provider')])),
                ('expenditure_for_purchased_service', models.DecimalField(decimal_places=2, max_digits=5)),
                ('SE_funds_expended', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('comparable_services_and_benefits', models.IntegerField(choices=[(1, 'service was provided in whole or part by comparable services and benefits providers.'), (2, 'service was provided in whole or part by comparable services and benefits and is no longer being provided.'), (None, 'service was not provided by comparable services and benefits providers.')])),
                ('comparable_services_type', models.IntegerField(choices=[(1, 'Adult education and Literacy program administered by the Department of Education'), (2, 'Adult, Dislocated Worker and Youth program administered by Department of Labor (DOL)'), (3, 'American Indian VR Services Program'), (4, 'Public Centers for Independent Living'), (5, 'Child Protective Service'), (6, 'Public Rehabilitation Program'), (7, 'Employer Provided Benefits'), (8, 'Public Educational Institution (elementary/secondary)'), (9, 'Public Educational Institution (postsecondary)'), (10, 'Public Employment Network (not otherwise listed)'), (11, 'Federal Student Aid (e.g., Pell grants, Supplemental Educational Opportunity Grant, work study, etc.)'), (12, 'Intellectual and Developmental Disabilities Agency (Public)'), (13, 'Medical Health Provider (Public)'), (14, 'Mental Health Provider (Public)'), (15, 'One-stop Partner (not listed separately)'), (16, 'Public Housing Authority'), (17, 'Social Security Administration (Disability Determination Service or District office)'), (18, 'State Department of Correction/Juvenile Justice'), (19, 'State Employment Service Agency'), (20, "Veteran's Benefits Administration (which includes VA Vocational Rehabilitation)"), (21, "Veteran's Health Administration (the VA hospital system, as well as the VA transitional living, transitional employment, and compensated work therapy programs)"), (22, 'Wagner-Peyser Employment Service Program'), (23, 'Welfare Agency (State or local government)')])),
            ],
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssdi', models.BooleanField()),
                ('ssi', models.BooleanField()),
                ('tanf', models.BooleanField()),
                ('general_assistance', models.BooleanField()),
                ('veterans_disability', models.BooleanField()),
                ('workers_compensation', models.BooleanField()),
                ('unemployment_insurance', models.BooleanField()),
                ('primary_source_support', models.IntegerField(choices=[(1, 'Applicant’s primary source of support is personal income (employment earnings, interest, dividends, rent, or retirement including social security)'), (2, 'Applicant’s primary source of support is family and friends.'), (3, 'Applicant’s primary source of support is public support (SSI, SSDI, TANF, etc.).'), (4, 'Applicant’s primary source of support is from other sources (e.g., private disability insurance and private charities)')])),
            ],
        ),
        migrations.CreateModel(
            name='TrialWorkExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='VocationalCredentialLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('not_leading_to_postsecondary_credential', models.BooleanField()),
                ('leading_to_postsecondary_credential', models.BooleanField()),
                ('date_vocational_license', models.DateField(null=True)),
                ('date_vocational_certificate', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VrSeService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_vr_start_date', models.DateField()),
                ('most_recent_career_service', models.DateField()),
                ('basic_academic_training', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='basic_academic_training', to='open_vr_api.Service')),
                ('customized_training', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='customized_training', to='open_vr_api.Service')),
                ('disability_related_skills', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='disability_related_skills', to='open_vr_api.Service')),
                ('four_year_college', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='four_year_college', to='open_vr_api.Service')),
                ('graduate_college_university', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='graduate_college_university', to='open_vr_api.Service')),
                ('job_readiness_training', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='job_readiness_training', to='open_vr_api.Service')),
                ('junior_community_college', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='junior_community_college', to='open_vr_api.Service')),
                ('miscellaneous_training', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='miscellaneous_training', to='open_vr_api.Service')),
                ('occupational_vocational_training', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='occupational_vocational_training', to='open_vr_api.Service')),
                ('on_the_job_training', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='on_the_job_training', to='open_vr_api.Service')),
                ('randolph_sheppard_entrependeurial', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='randolph_sheppard_entrependeurial', to='open_vr_api.Service')),
                ('registered_apprenticeship_training', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registered_apprenticeship_training', to='open_vr_api.Service')),
            ],
        ),
        migrations.CreateModel(
            name='VrUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VR_SE_service', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.VrSeService')),
                ('application', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.Application')),
                ('career_services', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.CareerServices')),
                ('disability', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.Disability')),
                ('eligibility', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.Eligibility')),
                ('employment', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.Employment')),
                ('exit', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.Exit')),
                ('ipe', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.IndividualizedPlanForEmployment')),
                ('measurable_skill_gains', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.MeasurableSkillGains')),
                ('order_of_selection', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.OrderOfSelection')),
                ('other_service', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.OtherService')),
                ('post_exit', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.PostExit')),
                ('pre_employment_transition_services', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.PreemploymentTransitionServices')),
                ('trial_work_experience', models.OneToOneField(null=True, on_delete='PROTECT', to='open_vr_api.TrialWorkExperience')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WIOAProgramInvolvement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult', models.IntegerField(choices=[(1, 'Individual received services under WIOA section 133(b)(2)(A) [Adult Employment and Training Activities] as an individual who is not less than age 18 at the time of program entry.'), (2, 'Individual received services under WIOA section 133(a)(1) [Statewide Workforce Investment Activities].'), (3, 'Individual received services under WIOA sections 133(b)(2)(A) [Adult Employment and Training Activities] and 132(b)(1) [Statewide Workforce Investment Activities].'), (0, 'Individual did not receive services under the WIOA sections listed above.')])),
                ('adult_education', models.IntegerField(choices=[(1, 'Individual did receive Adult Education services.'), (0, 'Individual did not receive any Adult Education services.'), (9, 'Unable to track enrollment in the program.')])),
                ('dislocated_worker', models.IntegerField(choices=[(1, 'Individual received services under section 133(b)(2)(B)'), (2, 'Individual received services under section 133(a)of WIOA.'), (3, 'Individual received services under sections 133(b)(2)(B) and 133(a) of WIOA.'), (0, 'Individual did not receive services under the WIOA sections listed above.')])),
                ('job_corps', models.IntegerField(choices=[(1, 'Individual received services under WIOA title I Chapter 4, Subtitle C.'), (0, 'Individual did not receive services under WIOA title I Chapter 4, Subtitle C.'), (9, 'Unable to track enrollment in program.')])),
                ('vocational_rehabilitation', models.IntegerField(choices=[(1, 'Individual received services under parts A and B of title I of the Rehabilitation Act of 1973'), (2, 'Individual received services from the Department of Veterans Affairs Vocational Rehabilitation and Employment'), (3, 'Individual received services from both vocational rehabilitation programs listed above.'), (0, 'Individual did not receive any services described above'), (9, 'Unknown')])),
                ('wagner_peyzer', models.IntegerField(choices=[(1, 'Individual received services under the Wagner-Peyser Act, as amended by title III of WIOA'), (0, 'Individual did not receive services under the Wagner-Peyser Act.'), (9, 'Unable to track enrollment in program.')])),
                ('youth', models.IntegerField(choices=[(1, 'Individual received services under section 128(b) of WIOA.'), (2, 'Individual received services under section 128(a) of WIOA.'), (3, 'Individual received services under sections 128(b) and 128(a) of WIOA.'), (0, 'Individual did not receive services under the WIOA sections listed above.')])),
                ('youth_build', models.CharField(max_length=14, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='preemploymenttransitionservices',
            name='counseling_on_enrollment',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='counseling_on_enrollment', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='preemploymenttransitionservices',
            name='instruction_in_self_advocacy',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='instruction_in_self_advocacy', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='preemploymenttransitionservices',
            name='job_exploration_counseling',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='job_exploration_counseling', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='preemploymenttransitionservices',
            name='work_based_learning',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='work_based_learning', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='preemploymenttransitionservices',
            name='workplace_readiness_training',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='workplace_readiness_training', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='postexit',
            name='first_quarter',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='first_quarter', to='open_vr_api.QuarterlyReport'),
        ),
        migrations.AddField(
            model_name='postexit',
            name='fourth_quarter',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='fourth_quarter', to='open_vr_api.QuarterlyReport'),
        ),
        migrations.AddField(
            model_name='postexit',
            name='second_quarter',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='second_quarter', to='open_vr_api.QuarterlyReport'),
        ),
        migrations.AddField(
            model_name='postexit',
            name='third_quarter',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='third_quarter', to='open_vr_api.QuarterlyReport'),
        ),
        migrations.AddField(
            model_name='otherservice',
            name='interpreter_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='interpreter_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='otherservice',
            name='maintenance',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='maintenance', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='otherservice',
            name='other_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='other_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='otherservice',
            name='personal_assistance_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='personal_assistance_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='otherservice',
            name='reader_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reader_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='otherservice',
            name='rehabilitation_technology',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rehabilitation_technology', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='otherservice',
            name='technical_assistance_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='technical_assistance_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='otherservice',
            name='transportation',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transportation', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='individualizedplanforemployment',
            name='employment',
            field=models.OneToOneField(on_delete='PROTECT', to='open_vr_api.IpeEmployment'),
        ),
        migrations.AddField(
            model_name='individualizedplanforemployment',
            name='wioa_program_involvement',
            field=models.OneToOneField(on_delete='PROTECT', to='open_vr_api.WIOAProgramInvolvement'),
        ),
        migrations.AddField(
            model_name='exit',
            name='medical_insurance',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='open_vr_api.MedicalInsuranceCoverage'),
        ),
        migrations.AddField(
            model_name='exit',
            name='support',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='open_vr_api.Support'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='assessment',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assessment', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='benefits_counseling',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='benefits_counseling', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='customized_employment_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='customized_employment_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='diagnosis_treatment_impairments',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='diagnosis_treatment_impairments', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='extended_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='extended_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='information_referral_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='information_referral_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='job_placement_assistance',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='job_placement_assistance', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='job_search_assistance',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='job_search_assistance', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='short_term_job_support',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='short_term_job_support', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='supported_employment_services',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='supported_employment_services', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='careerservices',
            name='vr_counseling_guidance',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vr_counseling_guidance', to='open_vr_api.Service'),
        ),
        migrations.AddField(
            model_name='application',
            name='individual_characteristics',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='open_vr_api.IndividualCharacteristics'),
        ),
        migrations.AddField(
            model_name='application',
            name='location_information',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='open_vr_api.LocationInformation'),
        ),
        migrations.AddField(
            model_name='application',
            name='medical_insurance_coverage',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='open_vr_api.MedicalInsuranceCoverage'),
        ),
        migrations.AddField(
            model_name='application',
            name='support',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='open_vr_api.Support'),
        ),
    ]
